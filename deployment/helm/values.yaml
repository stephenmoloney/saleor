# Default values for saleor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: mirumee/saleor
  tag: afce249100f2b90e96bc9b50a8a7b28c710378a0
  pullPolicy: IfNotPresent
  #  pullSecret:

# If using the standard secrets.yaml file, then leave this empty
# The value of 'existingSecret' is the name of the alternative secrets file to use
# existingSecret:

service:
  type: ClusterIP
  port: 80

## Documentation on ingress resources
## https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - saleor.local
  tls:
    - secretName: saleor-tls-example
      hosts:
        - saleor.local

livenessProbeSettings:
  initialDelaySeconds: 90
  periodSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 1
readinessProbeSettings:
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 1

# Enable persistence if serving images from a volume
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 15Gi
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Delete
  # Uncomment storageClass: "" to disable dynamic provisioning
  # storageClass: ""
  # To use an existingPvc rather than have it provisioned by this chart, uncommen and enter below
  # existingPvc:

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 1000m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

django:
  # One can optionally set an alternative config map for the settings.py file, eg
  #  alternativeConfigMap: custom-django-config
  alternativeConfigMap:
  settingsModule: saleor.custom-settings
  uwsgi:
    processes: 2
  init:
    migrations: true
    populateDbDemo: true
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicaCount: 1
    maxReplicaCount: 4
    targetCPUUtilizationPercentage: 80
  debugMode: true
  internalIps:
    - 127.0.0.1
  timezone: Etc/UTC
  languageCode: en
  internationalization: true
  localization: true
  enableSSL: true
  staticUrl: /static/
  mediaUrl: /media/
  enableSilk: false
  defaultCountry: US
  defaultCurrency: USD
  availableCurrencies:
    - USD
    - EUR
  loginRedirectUrl: home
  googleAnalyticsTrackingId: home
  lowStockThreshold: 10
  maxCartLineQuantity: 50
  paginateBy: 16
  dashboardPaginateBy: 30
  dashboardSearchLimit: 5
  allowedHosts:
    - localhost
    - 127.0.0.1
  admins:
    - name: saleor
      email: saleor@example.com
    - name: admin
      email: admin@example.com

  # Log levels
  levels:
    saleorLogs: DEBUG
    djangoServerLogs: INFO
    djangoLogs: INFO
    rootLogs: INFO
    consoleHandler: DEBUG
    mailAdminsHandler: ERROR

  images:
    placeholders:
      size_60: images/placeholder60x60.png
      size_120: images/placeholder120x120.png
      size_255: images/placeholder255x255.png
      size_540: images/placeholder540x540.png
      size_1080: images/placeholder1080x1080.png
    createOnDemand: true

  logoutOnPasswordChange: false

  # See https://developers.google.com/recaptcha/docs/versions
  captcha:
    publicKey:

  # Aws

  # Django docs:
  # Further mirumee docs - https://github.com/mirumee/saleor/blob/master/docs/deployment/s3.rst
  # django-storages docs - https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html

  # Aws docs:
  # Further info on location https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
  # Further info on buckets https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#create-bucket-intro
  # By setting a staticBucketName, static files will be served from aws s3 (eg js, css)
  # By setting a mediaBucketName, media files will be served from aws s3 (eg product images)
  # Aws docs on custom domains: https://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html
  # Aws docs on queryStringAuth https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html
  aws:
    enabled: false
    location: eu-west-1
    staticBucketName:
    staticCustomDomain:
    mediaBucketName:
    mediaCustomDomain:
    queryStringAuth: false

  # smtpSettings format: smtp://[loginName]@[customDomainName]:[password]@[providerDomainName]:[port]/[extraArgs]
  # The password should be set in the secrets file under EMAIL_PASSWORD
  # See https://github.com/mirumee/saleor/blob/master/docs/guides/email_integration.rst
  email:
    defaultFromEmail: saleor@example.com
    # if orderFromEmail is unset, will default to defaultFromEmail
    orderFromEmail:
    smtpSettings:
      loginName:
      customDomainName:
      providerDomainName: smtp.mailgun.org
      port: 465
      extraArgs: "?ssl=True"

  tokens:
    jwt:
      expires: true

celery:
  replicas: 1
  autoscaling:
    enabled: false
    minReplicaCount: 1
    maxReplicaCount: 4
    targetCPUUtilizationPercentage: 80
  # choose between fixed or auto
  concurrencyType: auto
  fixedConcurrency: 2
  minConcurrency: 2
  maxConcurrency: 6
  heartBeatIntervalSeconds: 10
  # softTimeLimitSeconds: 300
  # hardTimeLimitSeconds: 600
  # Logging level, choose between DEBUG, INFO, WARNING, ERROR, CRITICAL, or FATAL.
  logLevel: INFO
  taskEventsMonitoringEnabled: true
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

nginx:
  serveMedia:
    enabled: true
  serveStatic:
    enabled: true
  image:
    repository:
    tag:
    pullPolicy: IfNotPresent
#    pullSecret:
  livenessProbeSettings:
    initialDelaySeconds: 45
    periodSeconds: 5
    failureThreshold: 5
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbeSettings:
    initialDelaySeconds: 15
    periodSeconds: 5
    failureThreshold: 5
    successThreshold: 1
    timeoutSeconds: 1
  workerProcesses: 4
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

### Overrides charts/postgresql/values.yaml
### Corresponds to helm/charts/stable/postgresql chart.yaml v1.0.0
### except postgresql.enabled and postgresql.useExternalUrl which is saleor specific
### Refer to https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml

postgresql:
  enabled: true
  # If using an external postgresql instance, set useExternalUrl: true and see `templates/secrets.yaml`
  useExternalUrl: false

  ## postgres image repository
  image: "postgres"
  ## postgres image version
  ## ref: https://hub.docker.com/r/library/postgres/tags/
  ##
  imageTag: "9.6.2"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Specify imagePullSecrets
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  ##
  # imagePullSecrets: myregistrykey

  ## Create a database user
  ## Default: postgres
  postgresUser: saleor
  ## Default: random 10 character string
  # postgresPassword:

  ## Inject postgresPassword via a volume mount instead of environment variable
  usePasswordFile: false

  ## Use Existing secret instead of creating one
  ## It must have a postgres-password key containing the desired password
  # existingSecret: 'secret'

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: saleor

  ## Specify initdb arguments, e.g. --data-checksums
  ## ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  ## ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  # postgresInitdbArgs:

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Optional duration in seconds the pod needs to terminate gracefully.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  # terminationGracePeriodSeconds: 30

  ## Specify runtime config parameters as a dict, using camelCase, e.g.
  ## {"sharedBuffers": "500MB"}
  ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
  # postgresConfig:

  ## Specify content for pg_hba.conf
  ## Default: do not create pg_hba.conf
  # pgHbaConf: |-
  #   local all all trust
  #   host all all localhost trust
  #   host mydatabase mysuser 192.168.0.0/24 md5

  ## Persist data to a persistent volume
  persistence:
    enabled: false
    resourcePolicy:  # set resource-policy Helm annotation on PVC. Can be nil or "keep"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    subPath: "postgresql-db"
    mountPath: /var/lib/postgresql/data/pgdata

    # annotations: {}

  metrics:
    enabled: false
    image: wrouesnel/postgres_exporter
    imageTag: v0.4.6
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      ## Define additional custom metrics
      ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
      # customMetrics:
      #   pg_database:
      #     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
      #     metrics:
      #       - name:
      #           usage: "LABEL"
      #           description: "Name of the database"
      #       - size_bytes:
      #           usage: "GAUGE"
      #           description: "Size of the database in bytes"

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 2000m
      memory: 2Gi

  service:
    type: ClusterIP
    port: 5432
    externalIPs: []
    ## Manually set NodePort value
    ## Requires service.type: NodePort
    # nodePort:

  networkPolicy:
    ## Enable creation of NetworkPolicy resources.
    ##
    enabled: false

    ## The Policy model to apply. When set to false, only pods with the correct
    ## client label will have network access to the port PostgreSQL is listening
    ## on. When true, PostgreSQL will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true

  ## Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Override default liveness & readiness probes
  probes:
    liveness:
      initialDelay: 60
      timeoutSeconds: 5
      failureThreshold: 6
    readiness:
      initialDelay: 5
      timeoutSeconds: 3
      periodSeconds: 5
  ## Annotations for the deployment and nodes.
  deploymentAnnotations: {}
  podAnnotations: {}

  ## Deployment pods replace strategy
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # strategy: {}

  # Define custom environment variables to pass to the image here
  extraEnv: {}

### Overrides charts/elasticsearch/values.yaml
### Corresponds to helm/charts/stable/elasticsearch chart.yaml v1.11.1
### except elasticsearch.enabled and elasticsearch.useExternalUrl which is saleor specific
### Refer to https://github.com/helm/charts/blob/master/stable/elasticsearch/values.yaml

elasticsearch:
  enabled: true
  # If using an external postgresql instance, set useExternalUrl: true and see `templates/secrets.yaml`
  useExternalUrl: false

  # Default values for elasticsearch.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  appVersion: "6.4.2"

  image:
    repository: "docker.elastic.co/elasticsearch/elasticsearch-oss"
    tag: "6.4.2"
    pullPolicy: "IfNotPresent"
    # If specified, use these secrets to access the image
    # pullSecrets:
    #   - registry-secret

  initImage:
    repository: "busybox"
    tag: "latest"
    pullPolicy: "Always"

  cluster:
    name: "elasticsearch"
    # If you want X-Pack installed, switch to an image that includes it, enable this option and toggle the features you want
    # enabled in the environment variables outlined in the README
    xpackEnable: false
    # Some settings must be placed in a keystore, so they need to be mounted in from a secret.
    # Use this setting to specify the name of the secret
    # keystoreSecret: eskeystore
    config: {}
    # Custom parameters, as string, to be added to ES_JAVA_OPTS environment variable
    additionalJavaOpts: ""
    env:
      # IMPORTANT: https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#minimum_master_nodes
      # To prevent data loss, it is vital to configure the discovery.zen.minimum_master_nodes setting so that each master-eligible
      # node knows the minimum number of master-eligible nodes that must be visible in order to form a cluster.
      MINIMUM_MASTER_NODES: "2"

  client:
    name: client
    replicas: 1
    serviceType: ClusterIP
    loadBalancerIP: {}
    loadBalancerSourceRanges: {}
  ## (dict) If specified, apply these annotations to the client service
  #  serviceAnnotations:
  #    example: client-svc-foo
    heapSize: "512m"
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each client Pod
    # podAnnotations:
    #   example: client-foo
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1

  master:
    name: master
    exposeHttp: true
    replicas: 3
    heapSize: "512m"
    persistence:
      enabled: false
      accessMode: ReadWriteOnce
      name: data
      size: "4Gi"
      # storageClass: "ssd"
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each master Pod
    # podAnnotations:
    #   example: master-foo
    podDisruptionBudget:
      enabled: false
      minAvailable: 2  # Same as `cluster.env.MINIMUM_MASTER_NODES`
      # maxUnavailable: 1
    updateStrategy:
      type: OnDelete

  data:
    name: data
    exposeHttp: false
    replicas: 1
    heapSize: "1536m"
    persistence:
      enabled: false
      accessMode: ReadWriteOnce
      name: data
      size: "30Gi"
      # storageClass: "ssd"
    terminationGracePeriodSeconds: 3600
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 1536Mi
      limits:
        cpu: 1000m
        memory: 2048Mi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each data Pod
    # podAnnotations:
    #   example: data-foo
    podDisruptionBudget:
      enabled: false
      # minAvailable: 1
      maxUnavailable: 1
    updateStrategy:
      type: OnDelete

  ## Additional init containers
  extraInitContainers: |

# Overrides charts/redis/values.yaml
# Corresponds to helm/charts/stable/redis chart.yaml v4.2.1
# except redis.enabled and redis.useExternalUrl which is saleor specific
# Refer to https://github.com/helm/charts/blob/master/stable/redis/values.yaml

redis:
  enabled: true
  # If using an external redis instance, set useExternalUrl: true and see `templates/secrets.yaml`
  useExternalUrl: false

  ## Global Docker image registry
  ## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
  ##
  # global:
  #   imageRegistry:

  ## Bitnami Redis image version
  ## ref: https://hub.docker.com/r/bitnami/redis/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/redis
    ## Bitnami Redis image tag
    ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links
    ##
    tag: 4.0.11
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistrKeySecretName

  ## Cluster settings
  cluster:
    enabled: true
    slaveCount: 1

  networkPolicy:
    ## Specifies whether a NetworkPolicy should be created
    ##
    enabled: false

    ## The Policy model to apply. When set to false, only pods with the correct
    ## client label will have network access to the port Redis is listening
    ## on. When true, Redis will accept connections from any source
    ## (with the correct destination port).
    ##
    # allowExternal: true

  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: false
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  rbac:
    ## Specifies whether RBAC resources should be created
    ##
    create: false

    role:
      ## Rules to create. It follows the role specification
      # rules:
      #  - apiGroups:
      #    - extensions
      #    resources:
      #      - podsecuritypolicies
      #    verbs:
      #      - use
      #    resourceNames:
      #      - gce.unprivileged
      rules: []

  ## Use password authentication
  usePassword: true
  ## Redis password (both master and slave)
  ## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
  ## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
  ##
  password:
  ## Use existing secret (ignores previous password)
  # existingSecret:

  ## Persist data to a persistent volume
  persistence: {}
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

  ##
  ## Redis Master parameters
  ##
  master:
    ## Redis port
    port: 6379
    ## Redis command arguments
    ##
    ## Can be used to specify command line arguments, for example:
    ##
    ## args:
    ##  - "redis-server"
    ##  - "--maxmemory-policy volatile-ttl"
    args: []
    ## Redis additional command line flags
    ##
    ## Can be used to specify command line flags, for example:
    ##
    ## redisExtraFlags:
    ##  - "--maxmemory-policy volatile-ttl"
    ##  - "--repl-backlog-size 1024mb"
    extraFlags: []
    ## Comma-separated list of Redis commands to disable
    ##
    ## Can be used to disable Redis commands for security reasons.
    ## ref: https://github.com/bitnami/bitnami-docker-redis#disabling-redis-commands
    ##
    disableCommands: "FLUSHDB,FLUSHALL"

    ## Redis Master additional pod labels and annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}
    podAnnotations: {}

    ## Redis Master resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    ## Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    # schedulerName:

    ## Configure extra options for Redis Master liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 5

    ## Redis Master Node selectors and tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
    ##
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []
    ## Redis Master pod/node affinity/anti-affinity
    ##
    affinity: {}

    ## Redis Master Service properties
    service:
      ##  Redis Master Service type
      type: ClusterIP
      port: 6379

      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:

      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations: {}
      loadBalancerIP:

    ## Redis Master Pod Security Context
    ##
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      enabled: false
      ## The path the volume will be mounted at, useful when using different
      ## Redis images.
      path: /bitnami/redis/data
      ## The subdirectory of the volume to mount to, useful in dev environments
      ## and one PV for multiple services.
      subPath: ""
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessModes:
      - ReadWriteOnce
      size: 8Gi

    ## Update strategy, can be set to RollingUpdate or onDelete by default.
    ## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
    statefulset:
      updateStrategy: RollingUpdate
      ## Partition update strategy
      ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
      # rollingUpdatePartition:


  ##
  ## Redis Slave properties
  ## Note: serviceType and service are mandatory parameters
  ## The rest of the parameters, if undefined, will inherit those declared in Redis Master
  ##
  slave:
    ## Slave Service properties
    service:
      ##  Redis Slave Service type
      type: ClusterIP
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:

      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations: {}
      loadBalancerIP:

    ## Redis port
    # port: 6379
    ## Redis command arguments
    # args: []
    ## Redis extra flags
    # extraFlags: []
    ## Comma-separated list of Redis commands to disable
    # disableCommands: ""

    ## Redis Slave pod/node affinity/anti-affinity
    ##
    affinity: {}

    ## Configure extra options for Redis Slave liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5

    ## Redis slave Resource
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi

    ## Redis slave selectors and tolerations for pod assignment
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []

    ## Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    # schedulerName:

    ## Redis slave pod Annotation and Labels
    # podLabels: {}
    # podAnnotations: {}

    ## Redis slave pod Security Context
    # securityContext:
    #   enabled: true
    #   fsGroup: 1001
    #   runAsUser: 1001

  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false

    image:
      registry: docker.io
      repository: oliver006/redis_exporter
      tag: v0.20.2
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistrKeySecretName

    service:
      type: ClusterIP
      ## Use serviceLoadBalancerIP to request a specific static IP,
      ## otherwise leave blank
      # loadBalancerIP:
      annotations: {}
      # prometheus.io/scrape: "true"
      # prometheus.io/port: "9121"

    ## Metrics exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    # resources: {}

    ## Extra arguments for Metrics exporter, for example:
    ## extraArgs:
    ##   check-keys: myKey,myOtherKey
    # extraArgs: {}

    ## Metrics exporter labels and tolerations for pod assignment
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []

    ## Metrics exporter pod Annotation and Labels
    # podAnnotations: {}
    # podLabels: {}

  ##
  ## Init containers parameters:
  ## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
  ##

  volumePermissions:
    image:
      registry: docker.io
      repository: busybox
      tag: latest
      pullPolicy: IfNotPresent

  ## Redis config file
  ##
  configmap: |-
  #  Redis configuration file
